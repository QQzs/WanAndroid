// 描述Gradle所引入的插件类型，表示是一个Android Application
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    // 编译构建工具SDK版本
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.zs.demo.wanandroid"
        // 支持最小SDK版本，则表示编译完成好的app，在SDK 16以下不能运行。
        minSdkVersion rootProject.ext.minSdkVersion
        // 目标SDK版本(建议版本)
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        // 只有java没有引入Kotlin 时写法
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [ AROUTER_MODULE_NAME : project.getName() ]
//            }
//        }

    }
    // 编译类型，可以在此处，对不同编译类型，如release(正式版)，debug(测试版)进行配置
    buildTypes {
        release {
            // 是否混淆(false:不混淆)
            minifyEnabled false
            // 混淆规则的配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    // 本地依赖声明，包含libs文件下的所有jar文件
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //组件化ARouter
    kapt "com.alibaba:arouter-compiler:$arouterCompilerVersion"
    // 只有java没有引入Kotlin 时写法
    //    annotationProcessor "com.alibaba:arouter-compiler:$arouterCompilerVersion"
    implementation project(':commonlib')
    implementation project(':loginlib')
    implementation project(':modulearticle')
    implementation project(':moduletype')
    implementation project(':modulehot')
    implementation project(':moduletask')
}
